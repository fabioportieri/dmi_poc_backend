version: "3.8"

networks:
  poc_net:
    driver: bridge
    name: poc_net
    
services:

  minio:
    container_name: minio
    image: minio/minio
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
    #  - minio_data:/data
      - ./minio/init_minio.sh:/docker-entrypoint-initdb.d/init_minio.sh
    environment:
      MINIO_ROOT_USER: rbt6CNmVEl1UiaAS6viB
      MINIO_ROOT_PASSWORD: Q9jbat71jYHv1ySgjay7Mfyp01tV0c9lYYIXCa6d
    command: server --console-address ":9001" /data
    networks:
      poc_net:
        aliases:
          - minio
  minio-init:
    image: minio/mc
    command: ['sh', '-c', 'chmod +x /docker-entrypoint-initdb.d/init_minio.sh && /docker-entrypoint-initdb.d/init_minio.sh']
    volumes:
      - ./minio/init_minio.sh:/docker-entrypoint-initdb.d/init_minio.sh
    entrypoint: ['']
    depends_on:
      - minio
    networks:
      poc_net:
        aliases:
          - minio-init
  db:
    image: postgres:14.5
    restart: unless-stopped
    container_name: postgres-db
    #volumes:
      #  - msnoti-db-data:/var/lib/postgresql/data
    #  - ./check_db_noti_health.sh:/check_db_noti_health.sh
    command:
      - 'postgres'
      - '-c'
      - 'max_connections=300'
      - '-p 5492'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=lonewolf
      - POSTGRES_DB=dmi_poc
      - PGDATA=/var/lib/postgresql/data/pgdata
      #- POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - 5492:5492
    networks:
      poc_net:
        aliases:
          - postgres-db
  app:
    depends_on:
      - db
      - minio
    build:
      context: .
      dockerfile: Dockerfile
    restart: on-failure
    #env_file: ./.env
    ports:
      - 8080:8080
    environment:
      - DB_HOST=postgres-db
      - APP_MINIO_ACCESSKEY=pDLNypgWK4n4IidH
      - APP_MINIO_SECRETKEY=6pvgqJI9Bhxn0bEYp5NEk8xS8wDHW4ox
      - APP_MINIO_HOST=http://minio:9000
    #volumes:
    #  - .m2:/root/.m2
    networks:
      poc_net:
        aliases:
          - dmi_poc


volumes:
  db: